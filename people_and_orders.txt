1. db.people.aggregate([
  {$group: {
    _id: null,
    averageAge: {$avg: '$age'}
  }}]);

2. db.people.aggregate([
  {$group: {
    _id: '$gender',
    avg_age: {$avg: '$age'}
  }}]);

3. db.people.aggregate([
  {$group: {
    _id: '$gender',
    avg_age: {$avg: '$age'}
  }},
  {
    $project: {
      _id: 0,
      gender: '$_id',
      avg_age: 1
    }
  }]);

4.db.people.aggregate([
  {$sort: {age: -1}},
  {$limit: 3},
  {$project: {
    _id: 0,
    first_name: 1,
    last_name: 1,
    age: 1
  }}]);

5. db.people.aggregate([
  {$sort: {age: 1}},
  {$limit: 5},
  {$project:{
    _id: 0,
    name: {$concat: ['$first_name', ' ', '$last_name']},
    age: 1
  }}]);

6. db.people.aggregate([{$group:{_id: null, averagenumofChildren:{$avg:{$size:"$children"}}}}])

7. db.people.aggregate([
  {
    $unwind: "$children"  // Unwind the "children" array
  },
  {
    $match: {  // Filter documents where "state" is "Michigan" and "age" is less than 10
      "state": "Michigan",
      "children.age": { $lt: 10 }
    }
  },
  {
    $project: {  // Project only the "name" and "age" fields of the matching children
      "name": "$children.name",
      "age": "$children.age"
    }
  }
])

8. db.people.aggregate([
  { $unwind: "$children" }, 
  { $group: {
      _id: "$state",
      avgAge: { $avg: "$children.age" } 
  }},
  { $sort: { avgAge: -1 } } 
])

9. db.orders.aggregate([
  {
    $group: {
      _id: null,
      totalSales: { $sum: "$total" }
    }
  }
])

10. db.orders.aggregate([
  {
    $match: {
      date: "2017-05-22"
    }
  },
  {
    $group: {
      _id: null,
      totalSales: { $sum: "$total" }
    }
  }
])

11. db.orders.aggregate([
  {
  $group: {
    _id: {
      $concat: [
        { $substr: ["$date", 0, 4] },
        "-",
        { $substr: ["$date", 5, 2] },
        "-",
        { $substr: ["$date", 8, 2] }
      ]
    },
    orders: { $sum: 1 }
  }
}
])

12. db.sales.aggregate([
  {
    $group: {
      _id: {
        $concat: [
          { $substr: ["$date", 0, 4] },
          "-",
          { $substr: ["$date", 5, 2] },
          "-",
          { $substr: ["$date", 8, 2] }
        ]
      },
      totalSales: { $sum: "$amount" }
    }
  },
  {
    $sort: {
      totalSales: -1
    }
  },
  {
    $limit: 1
  }
])

13. db.sales.aggregate([
  {
    $group: {
      _id: "$product",
      quantitySold: { $sum: "$quantity" }
    }
  },
  {
    $sort: {
      quantitySold: -1
    }
  },
  {
    $limit: 3
  }
])

14. db.orders.aggregate([
  {
    $unwind: "$items"
  },
  {
    $group: {
      _id: "$items.product",
      revenue: { $sum: { $multiply: [ "$items.price", "$items.count" ] } }
    }
  },
  {
    $sort: {
      revenue: -1
    }
  },
  {
    $limit: 1
  },
  {
    $project: {
      _id: 0,
      productName: "$_id",
      revenue: 1
    }
  }
])

